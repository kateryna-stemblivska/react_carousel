{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentShift","setCurrentShift","widthOfListBox","hiddenImagesLength","length","className","style","width","map","img","ind","transform","transition","src","alt","type","onClick","shift","Math","min","disabled","max","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","infiniteAnimation","setInfiniteAnimation","htmlFor","id","value","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.409d5cfe.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentShift, setCurrentShift] = useState(0);\n\n  const widthOfListBox = itemWidth * frameSize;\n  const hiddenImagesLength = (images.length - frameSize) * itemWidth;\n\n  const getPrevImage = () => {\n    setCurrentShift((shift) => Math.min(shift + itemWidth * step, 0));\n  };\n\n  const getNextImage = () => {\n    setCurrentShift((shift) => Math.max(\n      shift - itemWidth * step,\n      -hiddenImagesLength,\n    ));\n\n    if (currentShift === -hiddenImagesLength && infinite) {\n      setCurrentShift(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${widthOfListBox}px` }}\n      >\n        {images.map((img, ind) => (\n          <li\n            key={`ImageId / ${ind + 1}`}\n            style={{\n              transform: `translateX(${currentShift}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={img}\n              alt={`Emoji #${ind + 1}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons-wrapper\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={getPrevImage}\n          disabled={currentShift === 0}\n        >\n          &#9664;\n        </button>\n        <button\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={getNextImage}\n          disabled={currentShift === -hiddenImagesLength && !infinite}\n        >\n          &#9654;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const imagesOfEmoji: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  const { images } = imagesOfEmoji;\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infiniteAnimation, setInfiniteAnimation] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\" data-cy=\"title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <div className=\"settings\">\n        <label\n          htmlFor=\"itemId\"\n          className=\"settings__label\"\n        >\n          Set item width:\n          <input\n            className=\"settings__input\"\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={30}\n            max={520}\n            onChange={(event) => {\n              setItemWidth(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameId\"\n          className=\"settings__label\"\n        >\n          Set frame size:\n          <input\n            className=\"settings__input\"\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            onChange={(event) => {\n              setFrameSize(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"stepId\"\n          className=\"settings__label\"\n        >\n          Set step:\n          <input\n            className=\"settings__input\"\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            onChange={(event) => {\n              setStep(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"animationId\"\n          className=\"settings__label\"\n        >\n          Set animation duration:\n          <input\n            className=\"settings__input\"\n            type=\"number\"\n            id=\"animationId\"\n            value={animationDuration}\n            max={5000}\n            step={500}\n            onChange={(event) => {\n              setAnimationDuration(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"infiniteId\"\n          className=\"settings__label\"\n        >\n          Set infinity animation:\n          <input\n            type=\"checkbox\"\n            id=\"infiniteId\"\n            checked={infiniteAnimation}\n            onChange={() => {\n              setInfiniteAnimation(checked => !checked);\n            }}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infiniteAnimation}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}